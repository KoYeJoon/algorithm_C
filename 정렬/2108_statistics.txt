//
//  main.c
//  prepareTest
//
//  Created by Ye Joon Ko on 2020/03/10.
//  Copyright Â© 2020 Ye Joon Ko. All rights reserved.
//

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <string.h>
int mid(int arr[],int n){
    int result = 0;
    int count = 0;
    for(int i=0;i<8001;i++){
        count = count+arr[i];
        if(count>(int)(n/2)){
            result = i-4000;
            break;
        }
    }
    return result;
}


int aLot(int arr[]){
    int result = 0;
    int max = arr[0];
    int count = 0;
    for(int i=1;i<8001;i++){
        if(max<arr[i]){
            max = arr[i];
        }
    }
    
    for(int i =0;i<8001;i++){
        if(arr[i] == max){
            result=i-4000;
            count++;
        }
        if(count>1){
            break;
        }
    }
    return result;
}


int range(int arr[],int n){
    int count = 0;
    int min = 0;
    int max = 0;
    int flag =0;
    for(int i=0;i<8001;i++){
        count = count+arr[i];
        if((count>0) && (flag==0)){
            min = i-4000;
            flag=1;
        }
        if(count == n){
            max = i-4000;
            break;
        }
    }
    return (max-min);
}

int main()
{
    
    int numCount[8001] = {0,};
    int n=0;
    int  average = 0;
    int sum = 0;
    int input=0;

    
    scanf("%d",&n);
    
    for(int i=0;i<n;i++){
        scanf("%d", &input);
        numCount[input+4000] ++ ;
        sum = sum+input;
    }

    double temp = (double)((double)sum/(double)n);
    if(sum>=0){
            average = (int)(temp+0.5);
    }
    else{
        average = (int)(temp-0.5);
    }



    
    printf("%d\n",average);
    printf("%d\n",mid(numCount,n));
    printf("%d\n",aLot(numCount));
    printf("%d",range(numCount,n));
    return 0;
}
